_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[167],{Bcm3:function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/upcoming-changes",function(){return t("kvn1")}])},kvn1:function(e,a,t){"use strict";t.r(a),t.d(a,"Layout",(function(){return b})),t.d(a,"meta",(function(){return u})),t.d(a,"tableOfContents",(function(){return d})),t.d(a,"default",(function(){return g}));var n,c=t("wx14"),o=t("Ff2n"),s=t("q1tI"),p=t.n(s),r=t("7ljp"),i=(t("YFqc"),t("tc9R")),l=t("vRWG"),m=t("I6Nb"),b=(p.a.createElement,l.DocumentationLayout),u={title:"Upcoming Changes",description:"Updates and deprecations coming in the future and how to prepare for them."},d=[{title:"Overview",slug:"overview",children:[]},{title:"Remove deprecated gap utilities",slug:"remove-deprecated-gap-utilities",children:[]},{title:"Purge layers by default",slug:"purge-layers-by-default",children:[]}],j=(n="Heading",function(e){return console.warn("Component '"+n+"' was not imported, exported, or provided by MDXProvider as global scope"),Object(r.a)("div",e)}),O={Layout:b,meta:u,tableOfContents:d},N=m.ContentsLayout;function g(e){var a=e.components,t=Object(o.a)(e,["components"]);return Object(r.a)(N,Object(c.a)({},O,t,{components:a,mdxType:"MDXLayout"}),Object(r.a)(j,{level:2,id:"overview",toc:!0,hidden:!0,mdxType:"Heading"},"Overview"),Object(r.a)("p",null,"Tailwind follows ",Object(r.a)("a",Object(c.a)({parentName:"p"},{href:"https://semver.org/"}),"semantic versioning"),", so we never introduce breaking changes until a new major release ",Object(r.a)("em",{parentName:"p"},"(v2.0 is the next one)"),"."),Object(r.a)("p",null,"Rather than drop a bunch of breaking changes on you at once though, we use feature flags as an incremental adoption strategy so you can opt-in to breaking changes early, and save the upgrade hassle down the road."),Object(r.a)("p",null,"The following breaking changes are currently available in Tailwind behind flags."),Object(r.a)(i.a,{level:2,id:"remove-deprecated-gap-utilities",toc:!0},"Remove deprecated gap utilities"),Object(r.a)("p",null,"Tailwind v1.7.0 introduced new ",Object(r.a)("inlineCode",{parentName:"p"},"gap-x-{n}")," and ",Object(r.a)("inlineCode",{parentName:"p"},"gap-y-{n}")," utilities to replace the existing ",Object(r.a)("inlineCode",{parentName:"p"},"col-gap-{n}")," and ",Object(r.a)("inlineCode",{parentName:"p"},"row-gap-{n}")," utilities. We currently include both by default, but the old utilities will be removed in v2.0."),Object(r.a)("p",null,"To opt-in to removing them now, use the ",Object(r.a)("inlineCode",{parentName:"p"},"removeDeprecatedGapUtilities")," flag:"),Object(r.a)("pre",{className:"language-js"},Object(r.a)("code",Object(c.a)({parentName:"pre"},{className:"language-js"}),Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token comment"}),"// tailwind.config.js"),"\nmodule",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token property-access"}),"exports")," ",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  future",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    removeDeprecatedGapUtilities",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token boolean"}),"true"),Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),","),"\n  ",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),","),"\n  ",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token comment"}),"// ..."),"\n",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"))),Object(r.a)(i.a,{level:2,id:"purge-layers-by-default",toc:!0},"Purge layers by default"),Object(r.a)("p",null,"Tailwind v1.8.0 introduced new ",Object(r.a)("inlineCode",{parentName:"p"},"layers")," purge mode which will be the default in v2.0. It purges all layers (",Object(r.a)("inlineCode",{parentName:"p"},"base"),", ",Object(r.a)("inlineCode",{parentName:"p"},"components"),", and ",Object(r.a)("inlineCode",{parentName:"p"},"utilities"),") by default, whereas the previous default mode (",Object(r.a)("inlineCode",{parentName:"p"},"conservative"),", now deprecated) only purged the ",Object(r.a)("inlineCode",{parentName:"p"},"utilities")," layer."),Object(r.a)("p",null,"With the introduction of the new ",Object(r.a)("inlineCode",{parentName:"p"},"preserveHtmlElements")," purge option (which is ",Object(r.a)("inlineCode",{parentName:"p"},"true")," by default), we consider this more aggressive purging mode very safe, and it is unlikely to actually be a breaking change in your application."),Object(r.a)("p",null,"You should see an even smaller CSS file by default with the new ",Object(r.a)("inlineCode",{parentName:"p"},"layers")," mode enabled, and shouldn't see any negative consequences unless you were deliberately relying on the fact that Tailwind was previously not purging the ",Object(r.a)("inlineCode",{parentName:"p"},"base")," or ",Object(r.a)("inlineCode",{parentName:"p"},"components")," layers by default."),Object(r.a)("p",null,"To opt-in to using the new ",Object(r.a)("inlineCode",{parentName:"p"},"layers")," mode by default, use the ",Object(r.a)("inlineCode",{parentName:"p"},"purgeLayersByDefault")," flag:"),Object(r.a)("pre",{className:"language-js"},Object(r.a)("code",Object(c.a)({parentName:"pre"},{className:"language-js"}),Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token comment"}),"// tailwind.config.js"),"\nmodule",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token property-access"}),"exports")," ",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  future",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    purgeLayersByDefault",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token boolean"}),"true"),Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),","),"\n  ",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),","),"\n  ",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token comment"}),"// ..."),"\n",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"))),Object(r.a)("p",null,"If you'd like to only purge the ",Object(r.a)("inlineCode",{parentName:"p"},"utilities")," layer (like the ",Object(r.a)("inlineCode",{parentName:"p"},"conservative")," mode did), you can still opt-in with this flag, but then explicitly specify that you'd only like to purge the ",Object(r.a)("inlineCode",{parentName:"p"},"utilities")," layer:"),Object(r.a)("pre",{className:"language-js"},Object(r.a)("code",Object(c.a)({parentName:"pre"},{className:"language-js"}),Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token comment"}),"// tailwind.config.js"),"\nmodule",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token property-access"}),"exports")," ",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  future",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    purgeLayersByDefault",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token boolean"}),"true"),Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),","),"\n  ",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),","),"\n  purge",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    layers",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token string"}),"'utilities'"),Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    content",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"["),"\n      ",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token comment"}),"// Paths to your templates..."),"\n    ",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),","),"\n  ",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),","),"\n  ",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token comment"}),"// ..."),"\n",Object(r.a)("span",Object(c.a)({parentName:"code"},{className:"token punctuation"}),"}"))))}g.isMDXComponent=!0,g.layoutProps=O}},[["Bcm3",0,2,1,3,4]]]);