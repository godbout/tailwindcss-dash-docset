_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[105],{"+j7b":function(a,e,n){"use strict";n.r(e),n.d(e,"default",(function(){return y}));var t=n("wx14"),s=n("Ff2n"),c=n("q1tI"),o=n.n(c),p=n("7ljp"),l=n("YFqc"),i=n.n(l),r=n("tc9R"),u=n("pOT7"),b=n("vRWG"),m=n("I6Nb"),d=n("UyA5"),j=n("PDUk"),O=n("ODXe"),N=n("98BF"),k=(n("AOjV"),o.a.createElement),g=Object.entries(N.defaultConfig.variants).reduce((function(a,e){var n=Object(O.a)(e,2),t=n[0];return n[1].forEach((function(e){a[e]?a[e].push(t):a[e]=[t]})),a}),{});function h(a){var e=a.variant;return g[e]?k(o.a.Fragment,null,k("p",null,"By default, the ",k("code",null,e)," variant is enabled for the following core plugins:"),k("ul",null,g[e].map((function(a){return k("li",{key:a},k("code",null,a))})))):k("p",null,k("strong",null,"By default, the ",k("code",null,e)," variant is not enabled for any core plugins"),".")}o.a.createElement;var v={Layout:b.DocumentationLayout,meta:{title:"Hover, Focus, & Other States",description:"Using utilities to style elements on hover, focus, and more."},tableOfContents:[{title:"Overview",slug:"overview",children:[]},{title:"Hover",slug:"hover",children:[]},{title:"Focus",slug:"focus",children:[]},{title:"Active",slug:"active",children:[]},{title:"Group-hover",slug:"group-hover",children:[]},{title:"Group-focus",slug:"group-focus",children:[]},{title:"Focus-within",slug:"focus-within",children:[]},{title:"Focus-visible",slug:"focus-visible",children:[]},{title:"Motion-safe",slug:"motion-safe",children:[]},{title:"Motion-reduce",slug:"motion-reduce",children:[]},{title:"Disabled",slug:"disabled",children:[]},{title:"Visited",slug:"visited",children:[]},{title:"Checked",slug:"checked",children:[]},{title:"First-child",slug:"first-child",children:[]},{title:"Last-child",slug:"last-child",children:[]},{title:"Odd-child",slug:"odd-child",children:[]},{title:"Even-child",slug:"even-child",children:[]},{title:"Combining with responsive prefixes",slug:"combining-with-responsive-prefixes",children:[]},{title:"Generating variants for custom utilities",slug:"generating-variants-for-custom-utilities",children:[]},{title:"Creating custom variants",slug:"creating-custom-variants",children:[]},{title:"Default variants reference",slug:"default-variants-reference",children:[]}]},f=m.ContentsLayout;function y(a){var e=a.components,n=Object(s.a)(a,["components"]);return Object(p.a)(f,Object(t.a)({},v,n,{components:e,mdxType:"MDXLayout"}),Object(p.a)("div",{className:"prose"},Object(p.a)(r.a,{level:2,id:"overview",toc:!0,hidden:!0,mdxType:"Heading"},"Overview"),Object(p.a)("p",null,"Similar to how Tailwind handles ",Object(p.a)(i.a,{href:"/docs/responsive-design",passHref:!0},Object(p.a)("a",null,"responsive design")),", styling elements on hover, focus, and more can be accomplished by prefixing utilities with the appropriate state variant.")),Object(p.a)(u.a,{preview:'\n  <form class="flex w-full max-w-sm mx-auto space-x-3">\n    <input class="flex-1 appearance-none border border-transparent w-full py-2 px-4 bg-white text-gray-700 placeholder-gray-400 shadow-md rounded-lg text-base focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent" type="email" placeholder="Your email">\n    <button class="flex-shrink-0 bg-purple-600 text-white text-base font-semibold py-2 px-4 rounded-lg shadow-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 focus:ring-offset-purple-200" type="button">\n      Sign up\n    </button>\n  </form>\n',snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>border border-transparent <span class="code-highlight bg-code-highlight">focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent</span> ...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bg-purple-600 <span class="code-highlight bg-code-highlight">hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-opacity-50</span> ...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    Sign up\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>',previewClassName:void 0,color:"purple"}),Object(p.a)("div",{className:"prose"},Object(p.a)("p",null,Object(p.a)("strong",{parentName:"p"},"Not all state variants are enabled for all utilities by default due to file-size considerations"),", but we've tried our best to enable the most commonly used combinations out of the box."),Object(p.a)("p",null,"For a complete list of which variants are enabled by default, see the ",Object(p.a)("a",Object(t.a)({parentName:"p"},{href:"#default-variants-reference"}),"reference table")," at the end of this page."),Object(p.a)("p",null,"If you need to target a state that Tailwind doesn't support, you can extend the supported variants by ",Object(p.a)("a",Object(t.a)({parentName:"p"},{href:"#creating-custom-variants"}),"writing a variant plugin"),"."),Object(p.a)("hr",null),Object(p.a)(r.a,{level:2,id:"hover",toc:!0},"Hover"),Object(p.a)("p",null,"Add the ",Object(p.a)("inlineCode",{parentName:"p"},"hover:")," prefix to only apply a utility on hover.")),Object(p.a)(u.a,{preview:'\n  <div class="text-center">\n    <button type="button" class="py-2 px-4 bg-red-500 text-white font-semibold rounded-lg shadow-md hover:bg-red-700 focus:outline-none" tabindex="-1">\n      Hover me\n    </button>\n  </div>\n',snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bg-red-500 <span class="code-highlight bg-code-highlight">hover:bg-red-700</span> ...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  Hover me\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>',previewClassName:void 0,color:"rose"}),Object(p.a)("div",{className:"prose"},Object(p.a)("div",null,Object(p.a)(h,{variant:"hover",mdxType:"VariantEnabledList"})),Object(p.a)("p",null,"You can control whether ",Object(p.a)("inlineCode",{parentName:"p"},"hover")," variants are enabled for a plugin in the ",Object(p.a)("inlineCode",{parentName:"p"},"variants")," section of your ",Object(p.a)("inlineCode",{parentName:"p"},"tailwind.config.js")," file:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(t.a)({parentName:"div"},{className:"language-js"}),Object(p.a)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// tailwind.config.js"),"\nmodule",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token property-access"}),"exports")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// ..."),"\n  variants",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    extend",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n      padding",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token string"}),"'hover'"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)("hr",null),Object(p.a)(r.a,{level:2,id:"focus",toc:!0},"Focus"),Object(p.a)("p",null,"Add the ",Object(p.a)("inlineCode",{parentName:"p"},"focus:")," prefix to only apply a utility on focus.")),Object(p.a)(u.a,{preview:'\n  <div class="max-w-xs w-full mx-auto">\n    <input class="py-3 px-4 bg-white rounded-lg placeholder-gray-400 text-gray-900 appearance-none inline-block w-full shadow-md focus:outline-none focus:ring-2 focus:ring-blue-600" placeholder="Focus me">\n  </div>\n',snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="code-highlight bg-code-highlight">focus:ring-2 focus:ring-blue-600</span> ...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>',previewClassName:void 0,color:"lightBlue"}),Object(p.a)("div",{className:"prose"},Object(p.a)("div",null,Object(p.a)(h,{variant:"focus",mdxType:"VariantEnabledList"})),Object(p.a)("p",null,"You can control whether ",Object(p.a)("inlineCode",{parentName:"p"},"focus")," variants are enabled for a plugin in the ",Object(p.a)("inlineCode",{parentName:"p"},"variants")," section of your ",Object(p.a)("inlineCode",{parentName:"p"},"tailwind.config.js")," file:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(t.a)({parentName:"div"},{className:"language-js"}),Object(p.a)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// tailwind.config.js"),"\nmodule",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token property-access"}),"exports")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// ..."),"\n  variants",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    extend",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n      maxHeight",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token string"}),"'focus'"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)("hr",null),Object(p.a)(r.a,{level:2,id:"active",toc:!0},"Active"),Object(p.a)("p",null,"Add the ",Object(p.a)("inlineCode",{parentName:"p"},"active:")," prefix to only apply a utility when an element is active.")),Object(p.a)(u.a,{preview:'\n  <div class="text-center">\n    <button type="button" class="py-2 px-4 bg-emerald-500 text-white font-semibold rounded-lg shadow-md active:bg-emerald-700 focus:outline-none" tabindex="-1">\n      Click me\n    </button>\n  </div>\n',snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bg-green-500 <span class="code-highlight bg-code-highlight">active:bg-green-700</span> ...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  Click me\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>',previewClassName:void 0,color:"emerald"}),Object(p.a)("div",{className:"prose"},Object(p.a)("div",null,Object(p.a)(h,{variant:"active",mdxType:"VariantEnabledList"})),Object(p.a)("p",null,"You can control whether ",Object(p.a)("inlineCode",{parentName:"p"},"active")," variants are enabled for a plugin in the ",Object(p.a)("inlineCode",{parentName:"p"},"variants")," section of your ",Object(p.a)("inlineCode",{parentName:"p"},"tailwind.config.js")," file:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(t.a)({parentName:"div"},{className:"language-js"}),Object(p.a)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// tailwind.config.js"),"\nmodule",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token property-access"}),"exports")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// ..."),"\n  variants",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    extend",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n      backgroundColor",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token string"}),"'active'"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)("hr",null),Object(p.a)(r.a,{level:2,id:"group-hover",toc:!0},"Group-hover"),Object(p.a)("p",null,"If you need to style a child element when hovering over a specific parent element, add the ",Object(p.a)("inlineCode",{parentName:"p"},"group")," class to the parent element and add the ",Object(p.a)("inlineCode",{parentName:"p"},"group-hover:")," prefix to the utility on the child element.")),Object(p.a)(u.a,{preview:'\n  <div class="group px-6 py-5 max-w-full mx-auto w-72 border border-indigo-500 border-opacity-25 cursor-pointer rounded-lg select-none overflow-hidden space-y-1 hover:bg-white hover:shadow-lg hover:border-transparent">\n    <p class="font-semibold text-lg text-indigo-600 group-hover:text-gray-900">New Project</p>\n    <p class="text-indigo-500 group-hover:text-gray-500">Create a new project from a variety of starting templates.</p>\n  </div>\n',snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="code-highlight bg-code-highlight">group</span> border-indigo-500 hover:bg-white hover:shadow-lg hover:border-transparent ...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text-indigo-600 <span class="code-highlight bg-code-highlight">group-hover:text-gray-900</span> ...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>New Project<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text-indigo-500 <span class="code-highlight bg-code-highlight">group-hover:text-gray-500</span> ...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Create a new project from a variety of starting templates.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',previewClassName:void 0,color:"indigo"}),Object(p.a)("div",{className:"prose"},Object(p.a)("div",null,Object(p.a)(h,{variant:"group-hover",mdxType:"VariantEnabledList"})),Object(p.a)("p",null,"You can control whether ",Object(p.a)("inlineCode",{parentName:"p"},"group-hover")," variants are enabled for a plugin in the ",Object(p.a)("inlineCode",{parentName:"p"},"variants")," section of your ",Object(p.a)("inlineCode",{parentName:"p"},"tailwind.config.js")," file:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(t.a)({parentName:"div"},{className:"language-js"}),Object(p.a)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// tailwind.config.js"),"\nmodule",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token property-access"}),"exports")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// ..."),"\n  variants",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    extend",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n      divideColor",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token string"}),"'group-hover'"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)("hr",null),Object(p.a)(r.a,{level:2,id:"group-focus",toc:!0},"Group-focus"),Object(p.a)("p",null,"The ",Object(p.a)("inlineCode",{parentName:"p"},"group-focus")," variant works just like ",Object(p.a)("a",Object(t.a)({parentName:"p"},{href:"#group-hover"}),Object(p.a)("inlineCode",{parentName:"a"},"group-hover"))," except for focus:")),Object(p.a)(u.a,{preview:'\n  <div class="text-center">\n    <button type="button" class="group inline-flex items-center py-2 px-4 bg-amber-500 text-white font-semibold rounded-lg shadow-md focus:bg-amber-600 focus:outline-none">\n      <svg fill="currentColor" viewBox="0 0 20 20" class="-ml-1 mr-3 w-5 h-5 text-white group-focus:text-amber-300"><path d="M5 4a2 2 0 012-2h6a2 2 0 012 2v14l-5-2.5L5 18V4z"></path></svg>\n      Bookmark\n    </button>\n  </div>\n',snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="code-highlight bg-code-highlight">group</span> bg-yellow-500 focus:bg-yellow-600 ...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text-white <span class="code-highlight bg-code-highlight">group-focus:text-yellow-300</span> ...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>\n  Bookmark\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>',previewClassName:void 0,color:"amber"}),Object(p.a)("div",{className:"prose"},Object(p.a)("div",null,Object(p.a)(h,{variant:"group-focus",mdxType:"VariantEnabledList"})),Object(p.a)("p",null,"You can control whether ",Object(p.a)("inlineCode",{parentName:"p"},"group-focus")," variants are enabled for a plugin in the ",Object(p.a)("inlineCode",{parentName:"p"},"variants")," section of your ",Object(p.a)("inlineCode",{parentName:"p"},"tailwind.config.js")," file:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(t.a)({parentName:"div"},{className:"language-js"}),Object(p.a)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// tailwind.config.js"),"\nmodule",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token property-access"}),"exports")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// ..."),"\n  variants",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    extend",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n      backgroundColor",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token string"}),"'group-focus'"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)("hr",null),Object(p.a)(r.a,{level:2,id:"focus-within",toc:!0},"Focus-within"),Object(p.a)("p",null,"Add the ",Object(p.a)("inlineCode",{parentName:"p"},"focus-within:")," prefix to only apply a utility when a child element has focus.")),Object(p.a)(u.a,{preview:'\n  <form class="w-full max-w-sm mx-auto">\n    <div class="relative text-gray-400 focus-within:text-gray-600">\n      <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">\n        <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"/><path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"/></svg>\n      </div>\n      <input id="email" class="py-3 px-4 bg-white placeholder-gray-400 text-gray-900 rounded-lg shadow-md appearance-none w-full block pl-12 focus:outline-none" placeholder="you@example.com">\n    </div>\n  </form>\n',snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text-gray-400 <span class="code-highlight bg-code-highlight">focus-within:text-gray-600</span> ...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>currentColor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>focus:ring-2 focus:ring-gray-300 ...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>',previewClassName:void 0,color:"purple"}),Object(p.a)("div",{className:"prose"},Object(p.a)("div",null,Object(p.a)(h,{variant:"focus-within",mdxType:"VariantEnabledList"})),Object(p.a)("p",null,"You can control whether ",Object(p.a)("inlineCode",{parentName:"p"},"focus-within")," variants are enabled for a plugin in the ",Object(p.a)("inlineCode",{parentName:"p"},"variants")," section of your ",Object(p.a)("inlineCode",{parentName:"p"},"tailwind.config.js")," file:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(t.a)({parentName:"div"},{className:"language-js"}),Object(p.a)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// tailwind.config.js"),"\nmodule",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token property-access"}),"exports")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// ..."),"\n  variants",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    extend",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n      scale",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token string"}),"'focus-within'"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)("hr",null),Object(p.a)(r.a,{level:2,id:"focus-visible",toc:!0},"Focus-visible")),Object(p.a)(d.b,{mdxType:"TipCompat"},"Note that focus-visible currently requires JS and PostCSS polyfills for sufficient browser support."),Object(p.a)("div",{className:"prose"},Object(p.a)("p",null,"Add the ",Object(p.a)("inlineCode",{parentName:"p"},"focus-visible:")," prefix to only apply a utility when an element has focus but only if the user is using the keyboard.")),Object(p.a)(u.a,{preview:'\n  <div class="flex justify-center space-x-8">\n    <button type="button" class="py-2 px-4 bg-red-500 text-white font-semibold rounded-lg shadow-md hover:bg-red-700 focus:outline-none focus:bg-red-500 focus:ring-2 focus:ring-red-500 focus:ring-offset-2 focus:ring-opacity-75 focus:ring-transparent">\n      Ring on focus\n    </button>\n    <button type="button" class="py-2 px-4 bg-red-500 text-white font-semibold rounded-lg shadow-md hover:bg-red-700 focus:outline-none focus:bg-red-500 focus-visible:ring-2 focus-visible:ring-red-500 focus-visible:ring-offset-2 focus-visible:ring-opacity-75 focus-visible:ring-transparent">\n      Ring on focus-visible\n    </button>\n  </div>\n',snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="code-highlight bg-code-highlight">focus:ring-2 focus:ring-red-500</span> ...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  Ring on focus\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="code-highlight bg-code-highlight">focus-visible:ring-2 focus-visible:ring-rose-500</span> ...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  Ring on focus-visible\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>',previewClassName:void 0,color:"rose"}),Object(p.a)("div",{className:"prose"},Object(p.a)("p",null,"Note that currently only ",Object(p.a)("a",Object(t.a)({parentName:"p"},{href:"https://caniuse.com/?search=focus-visible"}),"Chrome, Edge, and Firefox")," support ",Object(p.a)("inlineCode",{parentName:"p"},"focus-visible")," natively, so for sufficient browser support you should install and configure both the ",Object(p.a)("a",Object(t.a)({parentName:"p"},{href:"https://github.com/WICG/focus-visible"}),"focus-visible JS polyfill")," and the ",Object(p.a)("a",Object(t.a)({parentName:"p"},{href:"https://github.com/csstools/postcss-focus-visible"}),"focus-visible PostCSS polyfill"),". Make sure to include the PostCSS plugin ",Object(p.a)("em",{parentName:"p"},"after")," Tailwind in your list of PostCSS plugins:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(t.a)({parentName:"div"},{className:"language-js"}),Object(p.a)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// postcss.config.js"),"\nmodule",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token property-access"}),"exports")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  plugins",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    tailwindcss",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token string"}),"'postcss-focus-visible'"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    autoprefixer",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)("div",null,Object(p.a)(h,{variant:"focus-visible",mdxType:"VariantEnabledList"})),Object(p.a)("p",null,"You can control whether ",Object(p.a)("inlineCode",{parentName:"p"},"focus-visible")," variants are enabled for a plugin in the ",Object(p.a)("inlineCode",{parentName:"p"},"variants")," section of your ",Object(p.a)("inlineCode",{parentName:"p"},"tailwind.config.js")," file:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(t.a)({parentName:"div"},{className:"language-js"}),Object(p.a)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// tailwind.config.js"),"\nmodule",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token property-access"}),"exports")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// ..."),"\n  variants",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    extend",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n      textDecoration",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token string"}),"'focus-visible'"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)("hr",null),Object(p.a)(r.a,{level:2,id:"motion-safe",toc:!0},"Motion-safe"),Object(p.a)("p",null,"Add the ",Object(p.a)("inlineCode",{parentName:"p"},"motion-safe:")," prefix to only apply a utility when the ",Object(p.a)("inlineCode",{parentName:"p"},"prefers-reduced-motion")," media feature matches ",Object(p.a)("inlineCode",{parentName:"p"},"no-preference"),"."),Object(p.a)("p",null,'For example, this button will only animate on hover if the user hasn\'t enabled "Reduce motion" on their system.')),Object(p.a)(u.a,{preview:'\n  <div class="text-center">\n    <button type="button" class="py-2 px-4 bg-light-blue-500 text-white font-semibold rounded-lg shadow-md transform transition motion-safe:hover:scale-110 duration-500 focus:outline-none" tabindex="-1">\n      Hover me\n    </button>\n  </div>\n',snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>transform <span class="code-highlight bg-code-highlight">motion-safe:hover:scale-110</span> ...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  Hover me\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>',previewClassName:void 0,color:"lightBlue"}),Object(p.a)("div",{className:"prose"},Object(p.a)("p",null,"Note that unlike most other variants, ",Object(p.a)("inlineCode",{parentName:"p"},"motion-safe")," can be combined with both responsive variants ",Object(p.a)("em",{parentName:"p"},"and")," other variants like ",Object(p.a)("inlineCode",{parentName:"p"},"hover"),", by stacking them in this order:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(t.a)({parentName:"div"},{className:"language-html"}),Object(p.a)("code",Object(t.a)({parentName:"pre"},{className:"language-html"}),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token tag"}),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token tag"}),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),"<"),"div")," ",Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token attr-name"}),"class"),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token attr-value"}),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),"="),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),'"'),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"code-highlight bg-code-highlight"}),"sm:motion-safe:hover:animate-spin"),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),'"')),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),">")),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"\x3c!-- ... --\x3e"),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token tag"}),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token tag"}),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),"</"),"div"),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),">"))))),Object(p.a)("div",null,Object(p.a)(h,{variant:"motion-safe",mdxType:"VariantEnabledList"})),Object(p.a)("p",null,"You can control whether ",Object(p.a)("inlineCode",{parentName:"p"},"motion-safe")," variants are enabled for a plugin in the ",Object(p.a)("inlineCode",{parentName:"p"},"variants")," section of your ",Object(p.a)("inlineCode",{parentName:"p"},"tailwind.config.js")," file:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(t.a)({parentName:"div"},{className:"language-js"}),Object(p.a)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// tailwind.config.js"),"\nmodule",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token property-access"}),"exports")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// ..."),"\n  variants",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    extend",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n      translate",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token string"}),"'motion-safe'"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)("hr",null),Object(p.a)(r.a,{level:2,id:"motion-reduce",toc:!0},"Motion-reduce"),Object(p.a)("p",null,"Add the ",Object(p.a)("inlineCode",{parentName:"p"},"motion-reduce:")," prefix to only apply a utility when the ",Object(p.a)("inlineCode",{parentName:"p"},"prefers-reduced-motion")," media feature matches ",Object(p.a)("inlineCode",{parentName:"p"},"reduce"),"."),Object(p.a)("p",null,'For example, this button will animate on hover by default, but the animations will be disabled if the user has enabled "Reduce motion" on their system.')),Object(p.a)(u.a,{preview:'\n  <div class="text-center">\n    <button type="button" class="py-2 px-4 bg-fuchsia-500 text-white font-semibold rounded-lg shadow-md transform transition motion-reduce:transform-none hover:scale-110 duration-500 focus:outline-none" tabindex="-1">\n      Hover me\n    </button>\n  </div>\n',snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>transform hover:scale-110 <span class="code-highlight bg-code-highlight">motion-reduce:transform-none</span> ...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  Hover me\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>',previewClassName:void 0,color:"fuchsia"}),Object(p.a)("div",{className:"prose"},Object(p.a)("p",null,"Note that unlike most other variants, ",Object(p.a)("inlineCode",{parentName:"p"},"motion-reduce")," can be combined with both responsive variants ",Object(p.a)("em",{parentName:"p"},"and")," other variants like ",Object(p.a)("inlineCode",{parentName:"p"},"hover"),", by stacking them in this order:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(t.a)({parentName:"div"},{className:"language-html"}),Object(p.a)("code",Object(t.a)({parentName:"pre"},{className:"language-html"}),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token tag"}),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token tag"}),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),"<"),"div")," ",Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token attr-name"}),"class"),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token attr-value"}),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),"="),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),'"'),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"code-highlight bg-code-highlight"}),"sm:motion-reduce:hover:animate-none"),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),'"')),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),">")),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"\x3c!-- ... --\x3e"),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token tag"}),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token tag"}),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),"</"),"div"),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),">"))))),Object(p.a)("div",null,Object(p.a)(h,{variant:"motion-reduce",mdxType:"VariantEnabledList"})),Object(p.a)("p",null,"You can control whether ",Object(p.a)("inlineCode",{parentName:"p"},"motion-reduce")," variants are enabled for a plugin in the ",Object(p.a)("inlineCode",{parentName:"p"},"variants")," section of your ",Object(p.a)("inlineCode",{parentName:"p"},"tailwind.config.js")," file:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(t.a)({parentName:"div"},{className:"language-js"}),Object(p.a)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// tailwind.config.js"),"\nmodule",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token property-access"}),"exports")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// ..."),"\n  variants",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    extend",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n      translate",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token string"}),"'motion-reduce'"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)("hr",null),Object(p.a)(r.a,{level:2,id:"disabled",toc:!0},"Disabled"),Object(p.a)("p",null,"Add the ",Object(p.a)("inlineCode",{parentName:"p"},"disabled:")," prefix to only apply a utility when an element is disabled.")),Object(p.a)(u.a,{preview:'\n  <div class="text-center space-x-8">\n    <button type="button" class="py-2 px-4 bg-emerald-500 text-white font-semibold rounded-lg shadow-md hover:bg-emerald-700 focus:outline-none disabled:opacity-50" tabindex="-1">\n      Submit\n    </button>\n    <button type="button" class="py-2 px-4 bg-emerald-500 text-white font-semibold rounded-lg shadow-md disabled:opacity-50" disabled tabindex="-1">\n      Submit\n    </button>\n  </div>\n',snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="code-highlight bg-code-highlight">disabled:opacity-50</span> ...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  Submit\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">disabled</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="code-highlight bg-code-highlight">disabled:opacity-50</span> ...<span class="token punctuation">"</span></span> <span class="token attr-name">disabled</span><span class="token punctuation">></span></span>\n  Submit\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>',previewClassName:void 0,color:"emerald"}),Object(p.a)("div",{className:"prose"},Object(p.a)("div",null,Object(p.a)(h,{variant:"disabled",mdxType:"VariantEnabledList"})),Object(p.a)("p",null,"You can control whether ",Object(p.a)("inlineCode",{parentName:"p"},"disabled")," variants are enabled for a plugin in the ",Object(p.a)("inlineCode",{parentName:"p"},"variants")," section of your ",Object(p.a)("inlineCode",{parentName:"p"},"tailwind.config.js")," file:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(t.a)({parentName:"div"},{className:"language-js"}),Object(p.a)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// tailwind.config.js"),"\nmodule",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token property-access"}),"exports")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// ..."),"\n  variants",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    extend",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n      opacity",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token string"}),"'disabled'"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)("hr",null),Object(p.a)(r.a,{level:2,id:"visited",toc:!0},"Visited"),Object(p.a)("p",null,"Add the ",Object(p.a)("inlineCode",{parentName:"p"},"visited:")," prefix to only apply a utility when a link has been visited.")),Object(p.a)(u.a,{preview:'\n  <div class="text-center space-x-16">\n    <a href="#" class="font-semibold text-blue-600 ">Unvisited link</a>\n    <a href="#" class="font-semibold text-purple-600 ">Visited link</a>\n  </div>\n',snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text-blue-600 <span class="code-highlight bg-code-highlight">visited:text-purple-600</span> ...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Link<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>',previewClassName:void 0,color:"indigo"}),Object(p.a)("div",{className:"prose"},Object(p.a)("div",null,Object(p.a)(h,{variant:"visited",mdxType:"VariantEnabledList"})),Object(p.a)("p",null,"You can control whether ",Object(p.a)("inlineCode",{parentName:"p"},"visited")," variants are enabled for a plugin in the ",Object(p.a)("inlineCode",{parentName:"p"},"variants")," section of your ",Object(p.a)("inlineCode",{parentName:"p"},"tailwind.config.js")," file:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(t.a)({parentName:"div"},{className:"language-js"}),Object(p.a)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// tailwind.config.js"),"\nmodule",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token property-access"}),"exports")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// ..."),"\n  variants",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    extend",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n      textColor",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token string"}),"'visited'"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)("hr",null),Object(p.a)(r.a,{level:2,id:"checked",toc:!0},"Checked"),Object(p.a)("p",null,"Add the ",Object(p.a)("inlineCode",{parentName:"p"},"checked:")," prefix to only apply a utility when a radio or checkbox is currently checked.")),Object(p.a)(u.a,{preview:'\n  <div class="p-4 max-w-xs mx-auto bg-white rounded-xl shadow-md">\n    <label class="flex items-center space-x-3">\n      <input type="checkbox" name="checked-demo" value="1" class="form-tick appearance-none h-6 w-6 border border-gray-300 rounded-md checked:bg-blue-600 checked:border-transparent focus:outline-none">\n      <span class="text-gray-900 font-medium">Option 1</span>\n    </label>\n  </div>\n',snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>appearance-none <span class="code-highlight bg-code-highlight">checked:bg-blue-600 checked:border-transparent</span> ...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>',previewClassName:void 0,color:"lightBlue"}),Object(p.a)("div",{className:"prose"},Object(p.a)("div",null,Object(p.a)(h,{variant:"checked",mdxType:"VariantEnabledList"})),Object(p.a)("p",null,"You can control whether ",Object(p.a)("inlineCode",{parentName:"p"},"checked")," variants are enabled for a plugin in the ",Object(p.a)("inlineCode",{parentName:"p"},"variants")," section of your ",Object(p.a)("inlineCode",{parentName:"p"},"tailwind.config.js")," file:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(t.a)({parentName:"div"},{className:"language-js"}),Object(p.a)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// tailwind.config.js"),"\nmodule",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token property-access"}),"exports")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// ..."),"\n  variants",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    extend",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n      backgroundColor",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token string"}),"'checked'"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)("hr",null),Object(p.a)(r.a,{level:2,id:"first-child",toc:!0},"First-child"),Object(p.a)("p",null,"Add the ",Object(p.a)("inlineCode",{parentName:"p"},"first:")," prefix to only apply a utility when it is the first-child of its parent. This is mostly useful when elements are being generated in some kind of loop.")),Object(p.a)(u.a,{preview:'\n  <div class="flex justify-around">\n    <div class="bg-indigo-500 rounded-md p-8 transform first:rotate-45"></div>\n    <div class="bg-indigo-500 rounded-md p-8 transform first:rotate-45"></div>\n    <div class="bg-indigo-500 rounded-md p-8 transform first:rotate-45"></div>\n    <div class="bg-indigo-500 rounded-md p-8 transform first:rotate-45"></div>\n  </div>\n',snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in items<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>transform <span class="code-highlight bg-code-highlight">first:rotate-45</span> ...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    {{ item }}\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',previewClassName:void 0,color:"indigo"}),Object(p.a)("div",{className:"prose"},Object(p.a)("p",null,"It's important to note that you should add any ",Object(p.a)("inlineCode",{parentName:"p"},"first:")," utilities to the child element, not the parent element."),Object(p.a)("div",null,Object(p.a)(h,{variant:"first-child",mdxType:"VariantEnabledList"})),Object(p.a)("p",null,"You can control whether ",Object(p.a)("inlineCode",{parentName:"p"},"first")," variants are enabled for a plugin in the ",Object(p.a)("inlineCode",{parentName:"p"},"variants")," section of your ",Object(p.a)("inlineCode",{parentName:"p"},"tailwind.config.js")," file:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(t.a)({parentName:"div"},{className:"language-js"}),Object(p.a)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// tailwind.config.js"),"\nmodule",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token property-access"}),"exports")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// ..."),"\n  variants",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    extend",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n      borderWidth",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token string"}),"'first'"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)("hr",null),Object(p.a)(r.a,{level:2,id:"last-child",toc:!0},"Last-child"),Object(p.a)("p",null,"Add the ",Object(p.a)("inlineCode",{parentName:"p"},"last:")," prefix to only apply a utility when it is the last-child of its parent. This is mostly useful when elements are being generated in some kind of loop.")),Object(p.a)(u.a,{preview:'\n  <div class="flex justify-around">\n    <div class="bg-amber-500 rounded-md p-8 transform last:rotate-45"></div>\n    <div class="bg-amber-500 rounded-md p-8 transform last:rotate-45"></div>\n    <div class="bg-amber-500 rounded-md p-8 transform last:rotate-45"></div>\n    <div class="bg-amber-500 rounded-md p-8 transform last:rotate-45"></div>\n  </div>\n',snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in items<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>transform <span class="code-highlight bg-code-highlight">last:rotate-45</span> ...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    {{ item }}\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',previewClassName:void 0,color:"amber"}),Object(p.a)("div",{className:"prose"},Object(p.a)("p",null,"It's important to note that you should add any ",Object(p.a)("inlineCode",{parentName:"p"},"last:")," utilities to the child element, not the parent element."),Object(p.a)("div",null,Object(p.a)(h,{variant:"last-child",mdxType:"VariantEnabledList"})),Object(p.a)("p",null,"You can control whether ",Object(p.a)("inlineCode",{parentName:"p"},"last")," variants are enabled for a plugin in the ",Object(p.a)("inlineCode",{parentName:"p"},"variants")," section of your ",Object(p.a)("inlineCode",{parentName:"p"},"tailwind.config.js")," file:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(t.a)({parentName:"div"},{className:"language-js"}),Object(p.a)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// tailwind.config.js"),"\nmodule",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token property-access"}),"exports")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// ..."),"\n  variants",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    extend",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n      borderWidth",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token string"}),"'last'"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)("hr",null),Object(p.a)(r.a,{level:2,id:"odd-child",toc:!0},"Odd-child"),Object(p.a)("p",null,"Add the ",Object(p.a)("inlineCode",{parentName:"p"},"odd:")," prefix to only apply a utility when it is an odd-child of its parent. This is mostly useful when elements are being generated in some kind of loop.")),Object(p.a)(u.a,{preview:'\n  <div class="flex justify-around">\n    <div class="bg-rose-500 rounded-md p-8 transform odd:rotate-45"></div>\n    <div class="bg-rose-500 rounded-md p-8 transform odd:rotate-45"></div>\n    <div class="bg-rose-500 rounded-md p-8 transform odd:rotate-45"></div>\n    <div class="bg-rose-500 rounded-md p-8 transform odd:rotate-45"></div>\n  </div>\n',snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in items<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>transform <span class="code-highlight bg-code-highlight">odd:rotate-45</span> ...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    {{ item }}\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',previewClassName:void 0,color:"rose"}),Object(p.a)("div",{className:"prose"},Object(p.a)("p",null,"It's important to note that you should add any ",Object(p.a)("inlineCode",{parentName:"p"},"odd:")," utilities to the child element, not the parent element."),Object(p.a)("div",null,Object(p.a)(h,{variant:"odd-child",mdxType:"VariantEnabledList"})),Object(p.a)("p",null,"You can control whether ",Object(p.a)("inlineCode",{parentName:"p"},"odd")," variants are enabled for a plugin in the ",Object(p.a)("inlineCode",{parentName:"p"},"variants")," section of your ",Object(p.a)("inlineCode",{parentName:"p"},"tailwind.config.js")," file:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(t.a)({parentName:"div"},{className:"language-js"}),Object(p.a)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// tailwind.config.js"),"\nmodule",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token property-access"}),"exports")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// ..."),"\n  variants",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    extend",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n      backgroundColor",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token string"}),"'odd'"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)("hr",null),Object(p.a)(r.a,{level:2,id:"even-child",toc:!0},"Even-child"),Object(p.a)("p",null,"Add the ",Object(p.a)("inlineCode",{parentName:"p"},"even:")," prefix to only apply a utility when it is an even-child of its parent. This is mostly useful when elements are being generated in some kind of loop.")),Object(p.a)(u.a,{preview:'\n  <div class="flex justify-around">\n    <div class="bg-fuchsia-500 rounded-md p-8 transform even:rotate-45"></div>\n    <div class="bg-fuchsia-500 rounded-md p-8 transform even:rotate-45"></div>\n    <div class="bg-fuchsia-500 rounded-md p-8 transform even:rotate-45"></div>\n    <div class="bg-fuchsia-500 rounded-md p-8 transform even:rotate-45"></div>\n  </div>\n',snippet:'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in items<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>transform <span class="code-highlight bg-code-highlight">even:rotate-45</span> ...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    {{ item }}\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>',previewClassName:void 0,color:"fuchsia"}),Object(p.a)("div",{className:"prose"},Object(p.a)("p",null,"It's important to note that you should add any ",Object(p.a)("inlineCode",{parentName:"p"},"even:")," utilities to the child element, not the parent element."),Object(p.a)("div",null,Object(p.a)(h,{variant:"even-child",mdxType:"VariantEnabledList"})),Object(p.a)("p",null,"You can control whether ",Object(p.a)("inlineCode",{parentName:"p"},"even")," variants are enabled for a plugin in the ",Object(p.a)("inlineCode",{parentName:"p"},"variants")," section of your ",Object(p.a)("inlineCode",{parentName:"p"},"tailwind.config.js")," file:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(t.a)({parentName:"div"},{className:"language-js"}),Object(p.a)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// tailwind.config.js"),"\nmodule",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token property-access"}),"exports")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// ..."),"\n  variants",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    extend",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n      backgroundColor",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"["),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token string"}),"'even'"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"]"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n    ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),","),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)("hr",null),Object(p.a)(r.a,{level:2,id:"combining-with-responsive-prefixes",toc:!0},"Combining with responsive prefixes"),Object(p.a)("p",null,"State variants are also responsive, meaning you can do things like change an element's hover style at different breakpoints for example."),Object(p.a)("p",null,"To apply a state variant at a specific breakpoint, add the responsive prefix first, before the state prefix:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(t.a)({parentName:"div"},{className:"language-html"}),Object(p.a)("code",Object(t.a)({parentName:"pre"},{className:"language-html"}),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token tag"}),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token tag"}),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),"<"),"button")," ",Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token attr-name"}),"class"),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token attr-value"}),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),"="),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),'"'),"... hover:bg-green-500 ",Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"code-highlight bg-code-highlight"}),"sm:hover:bg-blue-500"),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),'"')),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),">")),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"\x3c!-- ... --\x3e"),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token tag"}),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token tag"}),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),"</"),"button"),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),">"))))),Object(p.a)("hr",null),Object(p.a)(r.a,{level:2,id:"generating-variants-for-custom-utilities",toc:!0},"Generating variants for custom utilities"),Object(p.a)("p",null,"You can generate state variants for your own custom CSS classes by wrapping them with the ",Object(p.a)("inlineCode",{parentName:"p"},"@variants")," directive:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(t.a)({parentName:"div"},{className:"language-css"}),Object(p.a)("code",Object(t.a)({parentName:"pre"},{className:"language-css"}),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"/* Input: */"),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token atrule"}),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token rule"}),"@variants")," group-hover",Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),",")," hover",Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),",")," focus")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token selector"}),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token class"}),".banana"))," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n    ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token property"}),"color"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token color"}),"yellow"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"/* Output: */"),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token selector"}),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token class"}),".banana"))," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token property"}),"color"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token color"}),"yellow"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token selector"}),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token class"}),".group"),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token pseudo-class"}),":hover")," ",Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token class"}),".group-hover"),"\\",Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token"}),":banana"))," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token property"}),"color"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token color"}),"yellow"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token selector"}),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token class"}),".hover"),"\\",Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token"}),":banana"),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token pseudo-class"}),":hover"))," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token property"}),"color"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token color"}),"yellow"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token selector"}),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token class"}),".focus"),"\\",Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token"}),":banana"),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token pseudo-class"}),":focus"))," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token property"}),"color"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token color"}),"yellow"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),"\n"))),Object(p.a)("p",null,"For more information, see the ",Object(p.a)(i.a,{href:"/docs/functions-and-directives#variants",passHref:!0},Object(p.a)("a",null,"@variants directive documentation")),"."),Object(p.a)("hr",null),Object(p.a)(r.a,{level:2,id:"creating-custom-variants",toc:!0},"Creating custom variants"),Object(p.a)("p",null,"You can create your own variants for any states Tailwind doesn't support by default by writing a custom variant plugin."),Object(p.a)("p",null,"For example, this simple plugin adds support for the ",Object(p.a)("inlineCode",{parentName:"p"},"required")," pseudo-class variant:"),Object(p.a)("div",{className:"my-6 rounded-xl overflow-hidden bg-gray-800"},Object(p.a)("pre",Object(t.a)({parentName:"div"},{className:"language-js"}),Object(p.a)("code",Object(t.a)({parentName:"pre"},{className:"language-js"}),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token comment"}),"// tailwind.config.js"),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token keyword"}),"const")," plugin ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token function"}),"require"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token string"}),"'tailwindcss/plugin'"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n\nmodule",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"."),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token property-access"}),"exports")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),"=")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n  plugins",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token operator"}),":")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"["),"\n    ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token function"}),"plugin"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token keyword"}),"function"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token parameter"}),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),"{")," addVariant",Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),",")," e ",Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),"}")),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n      ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token function"}),"addVariant"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token string"}),"'required'"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),",")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token parameter"}),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),"{")," modifySelectors",Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),",")," separator ",Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),"}")),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token arrow operator"}),"=>")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n        ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token function"}),"modifySelectors"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token parameter"}),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),"{")," className ",Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),"}")),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),")")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token arrow operator"}),"=>")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"{"),"\n          ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token keyword"}),"return")," ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token template-string"}),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token template-punctuation string"}),"`"),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token string"}),"."),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token interpolation"}),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token interpolation-punctuation punctuation"}),"${"),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token function"}),"e"),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),"("),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token template-string"}),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token template-punctuation string"}),"`"),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token string"}),"required"),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token interpolation"}),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token interpolation-punctuation punctuation"}),"${"),"separator",Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token interpolation-punctuation punctuation"}),"}")),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token interpolation"}),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token interpolation-punctuation punctuation"}),"${"),"className",Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token interpolation-punctuation punctuation"}),"}")),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token template-punctuation string"}),"`")),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token punctuation"}),")"),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token interpolation-punctuation punctuation"}),"}")),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token string"}),":required"),Object(p.a)("span",Object(t.a)({parentName:"span"},{className:"token template-punctuation string"}),"`")),"\n        ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n      ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n    ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}"),Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),")"),"\n  ",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"]"),"\n",Object(p.a)("span",Object(t.a)({parentName:"code"},{className:"token punctuation"}),"}")))),Object(p.a)("p",null,"Learn more about writing variant plugins in the ",Object(p.a)(i.a,{href:"/docs/plugins#adding-variants",passHref:!0},Object(p.a)("a",null,"variant plugin documentation")),"."),Object(p.a)("hr",null),Object(p.a)(r.a,{level:2,id:"default-variants-reference",toc:!0},"Default variants reference"),Object(p.a)("p",null,"Due to file-size considerations, Tailwind does not include all variants for all utilities by default."),Object(p.a)("p",null,"To configure which variants are enabled for your project, see the ",Object(p.a)(i.a,{href:"/docs/configuring-variants",passHref:!0},Object(p.a)("a",null,"configuring variants documentation")),"."),Object(p.a)("div",null,Object(p.a)(j.a,{mdxType:"DefaultVariantsConfig"}))))}y.isMDXComponent=!0,y.layoutProps=v},MciR:function(a,e,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/hover-focus-and-other-states",function(){return n("+j7b")}])},ODXe:function(a,e,n){"use strict";n.d(e,"a",(function(){return s}));var t=n("BsWD");function s(a,e){return function(a){if(Array.isArray(a))return a}(a)||function(a,e){if("undefined"!==typeof Symbol&&Symbol.iterator in Object(a)){var n=[],t=!0,s=!1,c=void 0;try{for(var o,p=a[Symbol.iterator]();!(t=(o=p.next()).done)&&(n.push(o.value),!e||n.length!==e);t=!0);}catch(l){s=!0,c=l}finally{try{t||null==p.return||p.return()}finally{if(s)throw c}}return n}}(a,e)||Object(t.a)(a,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},pOT7:function(a,e,n){"use strict";n.d(e,"a",(function(){return i}));var t=n("q1tI"),s=n.n(t),c=n("iuhU"),o=s.a.createElement,p={amber:"bg-amber-500",emerald:"bg-emerald-500",fuchsia:"bg-fuchsia-400",indigo:"bg-indigo-400",lightBlue:"bg-light-blue-500",purple:"bg-purple-400",rose:"bg-rose-400"},l={amber:"bg-gradient-to-r from-amber-50 to-amber-100",emerald:"bg-gradient-to-r from-emerald-50 to-teal-100",fuchsia:"bg-gradient-to-r from-fuchsia-50 to-fuchsia-100",gray:"bg-gradient-to-r from-gray-50 to-gray-100",indigo:"bg-gradient-to-r from-indigo-50 to-indigo-100",lightBlue:"bg-gradient-to-r from-light-blue-50 to-light-blue-100",purple:"bg-gradient-to-r from-purple-50 to-purple-100",rose:"bg-gradient-to-r from-rose-50 to-rose-100"};function i(a){var e=a.preview,n=a.snippet,t=a.previewClassName,s=a.color,i=void 0===s?"gray":s;return o("div",{className:"relative overflow-hidden mb-8"},o("div",{className:Object(c.a)("rounded-t-xl overflow-hidden",l[i],t,{"p-10":!t}),dangerouslySetInnerHTML:{__html:e}}),o("div",{className:Object(c.a)("overflow-hidden rounded-b-xl",p[i],{"bg-gray-800":!p[i]})},o("pre",{className:Object(c.a)("scrollbar-none overflow-x-auto p-6 text-sm leading-snug language-html text-white",{"bg-black bg-opacity-75":p[i]})},o("code",{className:"language-html",dangerouslySetInnerHTML:{__html:n}}))))}}},[["MciR",0,2,1,3,4,5,6,11]]]);